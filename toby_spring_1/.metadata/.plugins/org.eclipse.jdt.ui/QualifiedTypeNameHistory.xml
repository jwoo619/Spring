<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="springbook.user.dao.ConnectionMaker"/>
<fullyQualifiedTypeName name="springbook.user.dao.DConnectionMaker"/>
<fullyQualifiedTypeName name="java.lang.ClassNotFoundException"/>
<fullyQualifiedTypeName name="springbook.user.dao.CountingDaoFactory"/>
<fullyQualifiedTypeName name="com.mysql.fabric.xmlrpc.base.Data"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.AnnotationConfigApplicationContext"/>
<fullyQualifiedTypeName name="springbook.user.dao.DaoFactory"/>
<fullyQualifiedTypeName name="org.springframework.context.support.GenericXmlApplicationContext"/>
<fullyQualifiedTypeName name="org.springframework.jdbc.datasource.SimpleDriverDataSource"/>
<fullyQualifiedTypeName name="springbook.user.dao.CountingConnectionMaker"/>
<fullyQualifiedTypeName name="org.junit.runner.JUnitCore"/>
<fullyQualifiedTypeName name="javax.naming.spi.DirStateFactory.Result"/>
<fullyQualifiedTypeName name="org.springframework.dao.EmptyResultDataAccessException"/>
<fullyQualifiedTypeName name="org.springframework.test.annotation.DirtiesContext"/>
<fullyQualifiedTypeName name="org.springframework.jdbc.datasource.SingleConnectionDataSource"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="springbook.learningtest.junit.JUnitTest"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="org.junit.runner.RunWith"/>
<fullyQualifiedTypeName name="org.springframework.test.context.junit4.SpringJUnit4ClassRunner"/>
<fullyQualifiedTypeName name="org.springframework.test.context.ContextConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.context.ApplicationContext"/>
<fullyQualifiedTypeName name="springbook.user.dao.DeleteAllStatement"/>
<fullyQualifiedTypeName name="springbook.user.dao.AddStatement"/>
<fullyQualifiedTypeName name="springbook.user.dao.StatementStrategy"/>
<fullyQualifiedTypeName name="java.sql.Connection"/>
<fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
<fullyQualifiedTypeName name="springbook.user.dao.JdbcContext"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="org.junit.Before"/>
<fullyQualifiedTypeName name="springbook.learningtest.template.Calculator"/>
<fullyQualifiedTypeName name="springbook.learningtest.template.BufferdReaderCallback"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="springbook.learningtest.template.LineCallback"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="org.springframework.jdbc.core.JdbcTemplate"/>
<fullyQualifiedTypeName name="java.sql.ResultSet"/>
<fullyQualifiedTypeName name="java.awt.List"/>
<fullyQualifiedTypeName name="antlr.collections.List"/>
<fullyQualifiedTypeName name="org.springframework.jdbc.core.RowMapper"/>
<fullyQualifiedTypeName name="javassist.tools.Dump"/>
<fullyQualifiedTypeName name="java.lang.Throwable"/>
<fullyQualifiedTypeName name="com.mysql.jdbc.MysqlErrorNumbers"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="springbook.user.dao.DuplicateUserIdException"/>
<fullyQualifiedTypeName name="springbook.user.domian.User"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="springbook.user.dao.UserDao"/>
<fullyQualifiedTypeName name="org.junit.Test"/>
<fullyQualifiedTypeName name="java.sql.SQLException"/>
<fullyQualifiedTypeName name="org.springframework.jdbc.support.SQLExceptionTranslator"/>
<fullyQualifiedTypeName name="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="javax.sql.DataSource"/>
<fullyQualifiedTypeName name="org.hamcrest.core.IsInstanceOf"/>
<fullyQualifiedTypeName name="org.springframework.dao.DuplicateKeyException"/>
<fullyQualifiedTypeName name="org.springframework.dao.DataAccessException"/>
</qualifiedTypeNameHistroy>
