content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_favorite_static_members=org.assertj.core.api.Assertions.*;org.mockito.Matchers.*;org.mockito.Mockito.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*;org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*;org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers.*;org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*;org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*;org.springframework.test.web.client.match.MockRestRequestMatchers.*;org.springframework.test.web.client.response.MockRestResponseCreators.*;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;org.hamcrest.CoreMatchers.*;org.junit.Assert.*
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="springbook.user.domian.User"><rhs name\="springbook.user.domian.User"/></lhs><lhs name\="springbook.user.dao.UserDao"><rhs name\="springbook.user.dao.UserDao"/><rhs name\="springbook.user.service.UserServiceTest$MockUserDao"/></lhs><lhs name\="springbook.user.dao.UserDao$ConnectionMaker"><rhs name\="springbook.user.dao.UserDao$DConnectionMaker"/></lhs><lhs name\="springbook.user.dao.ConnectionMaker"><rhs name\="springbook.user.dao.CountingConnectionMaker"/><rhs name\="springbook.user.dao.DConnectionMaker"/></lhs><lhs name\="org.springframework.core.env.EnvironmentCapable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.ListableBeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.HierarchicalBeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.context.MessageSource"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisher"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.core.io.support.ResourcePatternResolver"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.core.io.ResourceLoader"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.context.ApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.context.support.GenericXmlApplicationContext"/></lhs><lhs name\="org.springframework.context.support.GenericApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.support.BeanDefinitionRegistry"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.AliasRegistry"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.support.AbstractApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.ConfigurableApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.Lifecycle"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="java.io.Closeable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="java.io.BufferedReader"/><rhs name\="java.io.FileReader"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="java.io.BufferedReader"/><rhs name\="java.io.FileReader"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.io.DefaultResourceLoader"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.jdbc.datasource.AbstractDriverBasedDataSource"><rhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"/></lhs><lhs name\="org.springframework.jdbc.datasource.AbstractDataSource"><rhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"/></lhs><lhs name\="javax.sql.DataSource"><rhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"/><rhs name\="org.springframework.jdbc.datasource.SingleConnectionDataSource"/></lhs><lhs name\="javax.sql.CommonDataSource"><rhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"/><rhs name\="org.springframework.jdbc.datasource.SingleConnectionDataSource"/></lhs><lhs name\="java.sql.Wrapper"><rhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"/><rhs name\="org.springframework.jdbc.datasource.SingleConnectionDataSource"/></lhs><lhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"><rhs name\="org.springframework.jdbc.datasource.SimpleDriverDataSource"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.HashSet"/><rhs name\="java.sql.SQLException"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.lang.Exception"><rhs name\="org.springframework.dao.DuplicateKeyException"/><rhs name\="java.sql.SQLException"/></lhs><lhs name\="java.lang.Throwable"><rhs name\="org.springframework.dao.DuplicateKeyException"/><rhs name\="java.sql.SQLException"/></lhs><lhs name\="java.sql.SQLException"><rhs name\="java.sql.SQLException"/></lhs><lhs name\="springbook.user.dao.StatementStrategy"><rhs name\="springbook.user.dao.DeleteAllStatement"/><rhs name\="springbook.user.dao.AddStatement"/></lhs><lhs name\="springbook.user.dao.JdbcContext"><rhs name\="springbook.user.dao.JdbcContext"/></lhs><lhs name\="java.io.Reader"><rhs name\="java.io.BufferedReader"/><rhs name\="java.io.FileReader"/></lhs><lhs name\="java.lang.Readable"><rhs name\="java.io.BufferedReader"/><rhs name\="java.io.FileReader"/></lhs><lhs name\="java.io.BufferedReader"><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.lang.Integer"/></lhs><lhs name\="springbook.learningtest.template.Calculator"><rhs name\="springbook.learningtest.template.Calculator"/></lhs><lhs name\="org.springframework.jdbc.core.JdbcOperations"><rhs name\="org.springframework.jdbc.core.JdbcTemplate"/></lhs><lhs name\="org.springframework.jdbc.support.JdbcAccessor"><rhs name\="org.springframework.jdbc.core.JdbcTemplate"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.jdbc.core.JdbcTemplate"/></lhs><lhs name\="org.springframework.jdbc.core.JdbcTemplate"><rhs name\="org.springframework.jdbc.core.JdbcTemplate"/></lhs><lhs name\="org.springframework.core.NestedRuntimeException"><rhs name\="org.springframework.dao.DuplicateKeyException"/></lhs><lhs name\="java.lang.RuntimeException"><rhs name\="org.springframework.dao.DuplicateKeyException"/></lhs><lhs name\="org.springframework.dao.DataAccessException"><rhs name\="org.springframework.dao.DuplicateKeyException"/></lhs><lhs name\="org.springframework.jdbc.support.SQLExceptionTranslator"><rhs name\="org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator"/></lhs><lhs name\="java.lang.Enum"><rhs name\="springbook.user.domian.Level"/></lhs><lhs name\="springbook.user.domian.Level"><rhs name\="springbook.user.domian.Level"/></lhs><lhs name\="springbook.user.service.UserService"><rhs name\="springbook.user.service.TestUserService"/><rhs name\="springbook.user.service.UserServiceTest$TestUserService"/><rhs name\="springbook.user.service.UserServiceTx"/><rhs name\="springbook.user.service.UserServiceImpl"/></lhs><lhs name\="org.springframework.transaction.PlatformTransactionManager"><rhs name\="org.springframework.jdbc.datasource.DataSourceTransactionManager"/><rhs name\="org.springframework.transaction.jta.JtaTransactionManager"/></lhs><lhs name\="org.springframework.transaction.TransactionDefinition"><rhs name\="org.springframework.transaction.support.DefaultTransactionDefinition"/></lhs><lhs name\="java.util.Hashtable"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Dictionary"><rhs name\="java.util.Properties"/></lhs><lhs name\="java.util.Properties"><rhs name\="java.util.Properties"/></lhs><lhs name\="org.springframework.mail.MailMessage"><rhs name\="org.springframework.mail.SimpleMailMessage"/></lhs><lhs name\="org.springframework.mail.SimpleMailMessage"><rhs name\="org.springframework.mail.SimpleMailMessage"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="org.springframework.mail.MailSender"><rhs name\="springbook.user.service.UserServiceTest$MockMailSender"/></lhs><lhs name\="springbook.user.service.UserServiceTest$MockMailSender"><rhs name\="springbook.user.service.UserServiceTest$MockMailSender"/></lhs><lhs name\="springbook.user.service.UserServiceTest$TestUserService"><rhs name\="springbook.user.service.UserServiceTest$TestUserService"/></lhs><lhs name\="springbook.user.service.UserServiceTx"><rhs name\="springbook.user.service.UserServiceTx"/></lhs><lhs name\="springbook.user.service.UserServiceImpl"><rhs name\="springbook.user.service.UserServiceImpl"/></lhs><lhs name\="springbook.user.service.UserServiceTest$MockUserDao"><rhs name\="springbook.user.service.UserServiceTest$MockUserDao"/></lhs><lhs name\="org.mockito.ArgumentCaptor"><rhs name\="org.mockito.ArgumentCaptor"/></lhs><lhs name\="springbook.learningtest.jdk.Hello"><rhs name\="springbook.learningtest.jdk.HelloUppercase"/><rhs name\="springbook.learningtest.jdk.HelloTarget"/></lhs><lhs name\="java.lang.reflect.InvocationHandler"><rhs name\="springbook.learningtest.jdk.TransactionHandler"/><rhs name\="springbook.learningtest.jdk.UppercaseHandler"/></lhs><lhs name\="springbook.learningtest.jdk.TransactionHandler"><rhs name\="springbook.learningtest.jdk.TransactionHandler"/></lhs><lhs name\="springbook.learningtest.spring.factorybean.Message"><rhs name\="springbook.learningtest.spring.factorybean.Message"/></lhs><lhs name\="java.lang.reflect.GenericDeclaration"><rhs name\="java.lang.Class"/></lhs><lhs name\="java.lang.reflect.AnnotatedElement"><rhs name\="java.lang.Class"/></lhs><lhs name\="java.lang.reflect.Type"><rhs name\="java.lang.Class"/></lhs><lhs name\="org.springframework.beans.factory.FactoryBean"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.BeanClassLoaderAware"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactoryAware"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.framework.ProxyCreatorSupport"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.aop.framework.AdvisedSupport"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.aop.framework.Advised"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.aop.TargetClassAware"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.aop.framework.ProxyConfig"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.springframework.aop.framework.ProxyFactoryBean"><rhs name\="org.springframework.aop.framework.ProxyFactoryBean"/></lhs><lhs name\="org.aopalliance.aop.Advice"><rhs name\="springbook.learningtest.jdk.proxy.DynamicProxyTest$UppercaseAdvice"/></lhs><lhs name\="org.springframework.aop.support.StaticMethodMatcherPointcut"><rhs name\="org.springframework.aop.support.NameMatchMethodPointcut"/></lhs><lhs name\="org.springframework.aop.Pointcut"><rhs name\="org.springframework.aop.support.NameMatchMethodPointcut"/><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.support.StaticMethodMatcher"><rhs name\="org.springframework.aop.support.NameMatchMethodPointcut"/></lhs><lhs name\="org.springframework.aop.MethodMatcher"><rhs name\="org.springframework.aop.support.NameMatchMethodPointcut"/><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.support.NameMatchMethodPointcut"><rhs name\="org.springframework.aop.support.NameMatchMethodPointcut"/></lhs><lhs name\="org.springframework.aop.Advisor"><rhs name\="org.springframework.aop.support.DefaultPointcutAdvisor"/></lhs><lhs name\="org.springframework.aop.ClassFilter"><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.IntroductionAwareMethodMatcher"><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.support.AbstractExpressionPointcut"><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.support.ExpressionPointcut"><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs><lhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"><rhs name\="org.springframework.aop.aspectj.AspectJExpressionPointcut"/></lhs></history>
content_assist_number_of_computers=32
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Monaco|11.0|0|COCOA|1|;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
